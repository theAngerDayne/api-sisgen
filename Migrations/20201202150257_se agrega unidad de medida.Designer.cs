// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_sisgen.Data;

namespace api_sisgen.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201202150257_se agrega unidad de medida")]
    partial class seagregaunidaddemedida
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Boleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MntExe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MntNeto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MntTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Boletas");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Detalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BoletaId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NmbItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrcItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtyItem")
                        .HasColumnType("int");

                    b.Property<string>("UnmdItem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoletaId");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Emisor", b =>
                {
                    b.Property<int>("BoletaId")
                        .HasColumnType("int");

                    b.Property<int>("Acteco")
                        .HasColumnType("int");

                    b.Property<int>("CdgSIISucur")
                        .HasColumnType("int");

                    b.Property<string>("CiudadOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmnaOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiroEmis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUTEmisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RznSoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoletaId");

                    b.ToTable("Emisor");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.IdDoc", b =>
                {
                    b.Property<int>("BoletaId")
                        .HasColumnType("int");

                    b.Property<string>("FchEmis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FchVenc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Folio")
                        .HasColumnType("int");

                    b.Property<int>("IndMntNeto")
                        .HasColumnType("int");

                    b.Property<int>("IndServicio")
                        .HasColumnType("int");

                    b.Property<string>("PeriodoDesde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoHasta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDTE")
                        .HasColumnType("int");

                    b.HasKey("BoletaId");

                    b.ToTable("IdDoc");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Receptor", b =>
                {
                    b.Property<int>("BoletaId")
                        .HasColumnType("int");

                    b.Property<string>("CdgIntRecep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiudadPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiudadRecep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmnaPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmnaRecep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirRecep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUTRecep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RznSocRecep")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoletaId");

                    b.ToTable("Receptor");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Detalle", b =>
                {
                    b.HasOne("api_sisgen.Models.BoletaElectronica.Boleta", null)
                        .WithMany("Detalles")
                        .HasForeignKey("BoletaId");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Emisor", b =>
                {
                    b.HasOne("api_sisgen.Models.BoletaElectronica.Boleta", "Boleta")
                        .WithOne("Emisor")
                        .HasForeignKey("api_sisgen.Models.BoletaElectronica.Emisor", "BoletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boleta");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.IdDoc", b =>
                {
                    b.HasOne("api_sisgen.Models.BoletaElectronica.Boleta", "Boleta")
                        .WithOne("IdDoc")
                        .HasForeignKey("api_sisgen.Models.BoletaElectronica.IdDoc", "BoletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boleta");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Receptor", b =>
                {
                    b.HasOne("api_sisgen.Models.BoletaElectronica.Boleta", "Boleta")
                        .WithOne("Receptor")
                        .HasForeignKey("api_sisgen.Models.BoletaElectronica.Receptor", "BoletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boleta");
                });

            modelBuilder.Entity("api_sisgen.Models.BoletaElectronica.Boleta", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Emisor");

                    b.Navigation("IdDoc");

                    b.Navigation("Receptor");
                });
#pragma warning restore 612, 618
        }
    }
}
